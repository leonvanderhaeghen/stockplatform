openapi: 3.0.3
info:
  title: StockPlatform Order Management API
  description: Order management and processing for the StockPlatform microservices
  version: 1.0.0
  contact:
    name: StockPlatform API Support
    email: support@stockplatform.com

servers:
  - url: http://localhost:8080
    description: Development server
  - url: https://api.stockplatform.com
    description: Production server

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Order:
      type: object
      properties:
        id:
          type: string
          description: Unique order identifier
        user_id:
          type: string
          description: Customer user ID
        status:
          type: string
          enum: [CREATED, PENDING, PAID, PROCESSING, SHIPPED, DELIVERED, CANCELLED, FAILED]
          description: Order status
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
          description: Order items
        address_id:
          type: string
          description: Shipping address ID
        payment_type:
          type: string
          description: Payment method type
        payment_data:
          type: object
          additionalProperties:
            type: string
          description: Payment-specific data
        shipping_type:
          type: string
          description: Shipping method
        notes:
          type: string
          description: Order notes
        total_amount:
          type: number
          format: float
          description: Total order amount
        created_at:
          type: string
          format: date-time
          description: Creation timestamp
        updated_at:
          type: string
          format: date-time
          description: Last update timestamp

    OrderItem:
      type: object
      properties:
        product_id:
          type: string
          description: Product ID
        quantity:
          type: integer
          minimum: 1
          description: Item quantity
        price:
          type: number
          format: float
          description: Item price at time of order

    CreateOrderRequest:
      type: object
      required:
        - items
        - addressID
        - paymentType
        - shippingType
      properties:
        items:
          type: array
          items:
            type: object
            properties:
              product_id:
                type: string
                description: Product ID
              quantity:
                type: integer
                minimum: 1
                description: Item quantity
              price:
                type: number
                format: float
                description: Item price
            required: [product_id, quantity, price]
          description: Order items
        addressID:
          type: string
          description: Shipping address ID
        paymentType:
          type: string
          description: Payment method type
        paymentData:
          type: object
          additionalProperties:
            type: string
          description: Payment-specific data
        shippingType:
          type: string
          description: Shipping method
        notes:
          type: string
          description: Order notes

    CreatePOSOrderRequest:
      type: object
      required:
        - items
        - locationID
        - staffID
        - paymentType
      properties:
        items:
          type: array
          items:
            type: object
            properties:
              product_id:
                type: string
                description: Product ID
              quantity:
                type: integer
                minimum: 1
                description: Item quantity
              price:
                type: number
                format: float
                description: Item price
            required: [product_id, quantity, price]
          description: Order items
        locationID:
          type: string
          description: Store location ID
        staffID:
          type: string
          description: Staff member ID
        paymentType:
          type: string
          description: Payment method type
        paymentData:
          type: object
          additionalProperties:
            type: string
          description: Payment-specific data
        notes:
          type: string
          description: Order notes

    QuickPOSTransactionRequest:
      type: object
      required:
        - locationID
        - staffID
        - items
        - paymentInfo
      properties:
        locationID:
          type: string
          description: Store location ID
        staffID:
          type: string
          description: Staff member ID
        items:
          type: array
          items:
            type: object
            properties:
              product_id:
                type: string
                description: Product ID
              quantity:
                type: integer
                minimum: 1
                description: Item quantity
              price:
                type: number
                format: float
                description: Item price
            required: [product_id, quantity, price]
          description: Transaction items
        paymentInfo:
          type: object
          additionalProperties: true
          description: Payment information

    UpdateOrderStatusRequest:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum: [CREATED, PENDING, PAID, PROCESSING, SHIPPED, DELIVERED, CANCELLED, FAILED]
          description: New order status
        description:
          type: string
          description: Status update description

    AddPaymentRequest:
      type: object
      required:
        - amount
        - paymentType
      properties:
        amount:
          type: number
          format: float
          minimum: 0
          description: Payment amount
        paymentType:
          type: string
          description: Payment method type
        reference:
          type: string
          description: Payment reference
        status:
          type: string
          description: Payment status
        date:
          type: string
          format: date-time
          description: Payment date
        description:
          type: string
          description: Payment description
        metadata:
          type: object
          additionalProperties:
            type: string
          description: Additional payment metadata

    AddTrackingRequest:
      type: object
      required:
        - carrier
        - trackingNum
      properties:
        carrier:
          type: string
          description: Shipping carrier
        trackingNum:
          type: string
          description: Tracking number
        shipDate:
          type: string
          format: date-time
          description: Ship date
        estDelivery:
          type: string
          format: date-time
          description: Estimated delivery date
        notes:
          type: string
          description: Tracking notes

    CancelOrderRequest:
      type: object
      required:
        - reason
      properties:
        reason:
          type: string
          description: Cancellation reason

    ListOrdersResponse:
      type: object
      properties:
        orders:
          type: array
          items:
            $ref: '#/components/schemas/Order'
        total:
          type: integer
          description: Total number of orders
        limit:
          type: integer
          description: Number of items per page
        offset:
          type: integer
          description: Starting offset

    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message

    SuccessMessage:
      type: object
      properties:
        message:
          type: string
          description: Success message

security:
  - BearerAuth: []

paths:
  /api/v1/orders:
    get:
      summary: List orders (admin/staff)
      description: List all orders with filtering options (admin/staff only)
      tags:
        - Order Management
      parameters:
        - name: status
          in: query
          description: Filter by order status
          schema:
            type: string
            enum: [CREATED, PENDING, PAID, PROCESSING, SHIPPED, DELIVERED, CANCELLED, FAILED]
        - name: userID
          in: query
          description: Filter by user ID
          schema:
            type: string
        - name: startDate
          in: query
          description: Filter by start date (ISO 8601)
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          description: Filter by end date (ISO 8601)
          schema:
            type: string
            format: date-time
        - name: limit
          in: query
          description: Number of items per page (default: 10)
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
        - name: offset
          in: query
          description: Starting offset (default: 0)
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOrdersResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden - Admin/Staff access required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      summary: Create a new order
      description: Create a new order for the authenticated user
      tags:
        - Customer Orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderRequest'
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad request - Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/orders/{id}:
    get:
      summary: Get order by ID (admin/staff)
      description: Get an order by its ID (admin/staff only)
      tags:
        - Order Management
      parameters:
        - name: id
          in: path
          required: true
          description: Order ID
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden - Admin/Staff access required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/orders/{id}/status:
    put:
      summary: Update order status (admin/staff)
      description: Update the status of an order (admin/staff only)
      tags:
        - Order Management
      parameters:
        - name: id
          in: path
          required: true
          description: Order ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrderStatusRequest'
      responses:
        '200':
          description: Order status updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessMessage'
        '400':
          description: Bad request - Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden - Admin/Staff access required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/orders/{id}/payment:
    post:
      summary: Add payment to order (admin/staff)
      description: Add payment information to an order (admin/staff only)
      tags:
        - Order Management
      parameters:
        - name: id
          in: path
          required: true
          description: Order ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddPaymentRequest'
      responses:
        '200':
          description: Payment added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessMessage'
        '400':
          description: Bad request - Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden - Admin/Staff access required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/orders/{id}/tracking:
    post:
      summary: Add tracking to order (admin/staff)
      description: Add tracking information to an order (admin/staff only)
      tags:
        - Order Management
      parameters:
        - name: id
          in: path
          required: true
          description: Order ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddTrackingRequest'
      responses:
        '200':
          description: Tracking information added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessMessage'
        '400':
          description: Bad request - Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden - Admin/Staff access required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/orders/{id}/cancel:
    put:
      summary: Cancel order (admin/staff)
      description: Cancel an order (admin/staff only)
      tags:
        - Order Management
      parameters:
        - name: id
          in: path
          required: true
          description: Order ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOrderRequest'
      responses:
        '200':
          description: Order cancelled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessMessage'
        '400':
          description: Bad request - Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden - Admin/Staff access required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/users/orders:
    get:
      summary: Get user orders
      description: Get orders for the authenticated user
      tags:
        - Customer Orders
      parameters:
        - name: status
          in: query
          description: Filter by order status
          schema:
            type: string
            enum: [CREATED, PENDING, PAID, PROCESSING, SHIPPED, DELIVERED, CANCELLED, FAILED]
        - name: startDate
          in: query
          description: Filter by start date (ISO 8601)
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          description: Filter by end date (ISO 8601)
          schema:
            type: string
            format: date-time
        - name: limit
          in: query
          description: Number of items per page (default: 10)
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
        - name: offset
          in: query
          description: Starting offset (default: 0)
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOrdersResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/users/orders/{id}:
    get:
      summary: Get user order by ID
      description: Get a specific order for the authenticated user
      tags:
        - Customer Orders
      parameters:
        - name: id
          in: path
          required: true
          description: Order ID
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Order not found or not accessible to user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
tags:
  - name: Customer Orders
    description: Customer order operations
  - name: Order Management
    description: Admin/Staff order management operations
